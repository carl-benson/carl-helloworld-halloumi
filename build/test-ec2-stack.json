{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Conditions": {
    "SkeletonFalse": {
      "Fn::Equals": [
        "true",
        "false"
      ]
    },
    "SkeletonTrue": {
      "Fn::Equals": [
        "true",
        "true"
      ]
    }
  },
  "Description": "HelloWorld,Ec2Stack,SkeletonStack test 6d04a7a62c10800c5715ecf2a51ed211af61f969-dirty",
  "Outputs": {
    "SkeletonInternetGatewayId": {
      "Value": {
        "Ref": "SkeletonInternetGatewayId"
      }
    },
    "SkeletonRouteTableId": {
      "Value": {
        "Ref": "SkeletonRouteTableId"
      }
    },
    "SkeletonVpcId": {
      "Value": {
        "Ref": "SkeletonVpcId"
      }
    }
  },
  "Parameters": {
    "SkeletonInternetGatewayId": {
      "Type": "String"
    },
    "SkeletonRouteTableId": {
      "Type": "String"
    },
    "SkeletonVpcId": {
      "Type": "String"
    }
  },
  "Resources": {
    "HelloWorldAsgAutoScalingGroup": {
      "Properties": {
        "AvailabilityZones": [
          {
            "Fn::Select": [
              0,
              {
                "Fn::GetAZs": ""
              }
            ]
          },
          {
            "Fn::Select": [
              1,
              {
                "Fn::GetAZs": ""
              }
            ]
          },
          {
            "Fn::Select": [
              2,
              {
                "Fn::GetAZs": ""
              }
            ]
          }
        ],
        "HealthCheckGracePeriod": 300,
        "HealthCheckType": "ELB",
        "LaunchConfigurationName": {
          "Ref": "HelloWorldAsgLaunchConfiguration"
        },
        "LoadBalancerNames": [
          {
            "Ref": "HelloWorldAsgLoadBalancerLoadBalancer"
          }
        ],
        "MaxSize": 2,
        "MinSize": 2,
        "Tags": [
          {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "HelloWorldAsgAutoScalingGroup"
          }
        ],
        "VPCZoneIdentifier": [
          {
            "Ref": "HelloWorldAsgSubnetGroupSubnet"
          },
          {
            "Ref": "HelloWorldAsgSubnetGroupSubnet2"
          },
          {
            "Ref": "HelloWorldAsgSubnetGroupSubnet3"
          }
        ]
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "MaxBatchSize": 1,
          "MinInstancesInService": 1,
          "PauseTime": "PT60S"
        }
      }
    },
    "HelloWorldAsgFirewallSecurityGroup": {
      "Properties": {
        "GroupDescription": "SecurityGroup",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": 80,
            "IpProtocol": 6,
            "ToPort": 80
          },
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": 443,
            "IpProtocol": 6,
            "ToPort": 443
          },
          {
            "FromPort": 80,
            "IpProtocol": 6,
            "SourceSecurityGroupId": {
              "Fn::GetAtt": [
                "HelloWorldAsgLoadBalancerFirewallSecurityGroup",
                "GroupId"
              ]
            },
            "ToPort": 80
          },
          {
            "FromPort": 443,
            "IpProtocol": 6,
            "SourceSecurityGroupId": {
              "Fn::GetAtt": [
                "HelloWorldAsgLoadBalancerFirewallSecurityGroup",
                "GroupId"
              ]
            },
            "ToPort": 443
          },
          {
            "CidrIp": "185.40.99.134/32",
            "FromPort": 22,
            "IpProtocol": 6,
            "ToPort": 22
          },
          {
            "CidrIp": "213.214.96.4/32",
            "FromPort": 22,
            "IpProtocol": 6,
            "ToPort": 22
          },
          {
            "CidrIp": "95.97.142.110/32",
            "FromPort": 22,
            "IpProtocol": 6,
            "ToPort": 22
          },
          {
            "CidrIp": "35.158.238.101/32",
            "FromPort": 22,
            "IpProtocol": 6,
            "ToPort": 22
          },
          {
            "CidrIp": "71.65.232.138/32",
            "FromPort": 22,
            "IpProtocol": 6,
            "ToPort": 22
          },
          {
            "CidrIp": "75.139.16.168/32",
            "FromPort": 22,
            "IpProtocol": 6,
            "ToPort": 22
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "HelloWorldAsgFirewallSecurityGroup"
          }
        ],
        "VpcId": {
          "Ref": "SkeletonVpcId"
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "HelloWorldAsgIamRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Path": "/",
        "Policies": [

        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "HelloWorldAsgInstanceProfile": {
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "HelloWorldAsgIamRole"
          }
        ]
      },
      "Type": "AWS::IAM::InstanceProfile"
    },
    "HelloWorldAsgLaunchConfiguration": {
      "Properties": {
        "AssociatePublicIpAddress": true,
        "EbsOptimized": false,
        "IamInstanceProfile": {
          "Ref": "HelloWorldAsgInstanceProfile"
        },
        "ImageId": "ami-895e69f0",
        "InstanceMonitoring": true,
        "InstanceType": "t2.micro",
        "KeyName": "helloworld",
        "SecurityGroups": [
          {
            "Ref": "HelloWorldAsgFirewallSecurityGroup"
          }
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash\napt-get update\napt-get install apache2 -y\necho \"<h1>Hello World from `curl http://169.254.169.254/latest/meta-data/instance-id`!</h1>\" > /var/www/html/index.html\nservice apache2 start\n"
        }
      },
      "Type": "AWS::AutoScaling::LaunchConfiguration"
    },
    "HelloWorldAsgLoadBalancerFirewallSecurityGroup": {
      "Properties": {
        "GroupDescription": "SecurityGroup",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": 80,
            "IpProtocol": 6,
            "ToPort": 80
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "HelloWorldAsgLoadBalancerFirewallSecurityGroup"
          }
        ],
        "VpcId": {
          "Ref": "SkeletonVpcId"
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "HelloWorldAsgLoadBalancerLoadBalancer": {
      "Properties": {
        "CrossZone": true,
        "HealthCheck": {
          "HealthyThreshold": 10,
          "Interval": 30,
          "Target": "TCP:80",
          "Timeout": 5,
          "UnhealthyThreshold": 2
        },
        "Listeners": [
          {
            "InstancePort": 80,
            "InstanceProtocol": "HTTP",
            "LoadBalancerPort": 80,
            "Protocol": "HTTP"
          }
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "HelloWorldAsgLoadBalancerFirewallSecurityGroup",
              "GroupId"
            ]
          }
        ],
        "Subnets": [
          {
            "Ref": "HelloWorldAsgLoadBalancerSubnetGroupSubnet"
          },
          {
            "Ref": "HelloWorldAsgLoadBalancerSubnetGroupSubnet2"
          },
          {
            "Ref": "HelloWorldAsgLoadBalancerSubnetGroupSubnet3"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "HelloWorldAsgLoadBalancerLoadBalancer"
          }
        ]
      },
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer"
    },
    "HelloWorldAsgLoadBalancerSubnetGroupSubnet": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.0.1.0/26",
        "Tags": [
          {
            "Key": "Name",
            "Value": "HelloWorldAsgLoadBalancerSubnetGroupSubnet"
          }
        ],
        "VpcId": {
          "Ref": "SkeletonVpcId"
        }
      },
      "Type": "AWS::EC2::Subnet"
    },
    "HelloWorldAsgLoadBalancerSubnetGroupSubnet2": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.0.1.64/26",
        "Tags": [
          {
            "Key": "Name",
            "Value": "HelloWorldAsgLoadBalancerSubnetGroupSubnet2"
          }
        ],
        "VpcId": {
          "Ref": "SkeletonVpcId"
        }
      },
      "Type": "AWS::EC2::Subnet"
    },
    "HelloWorldAsgLoadBalancerSubnetGroupSubnet3": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            2,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.0.1.128/26",
        "Tags": [
          {
            "Key": "Name",
            "Value": "HelloWorldAsgLoadBalancerSubnetGroupSubnet3"
          }
        ],
        "VpcId": {
          "Ref": "SkeletonVpcId"
        }
      },
      "Type": "AWS::EC2::Subnet"
    },
    "HelloWorldAsgLoadBalancerSubnetGroupSubnetRouteTableAssociation": {
      "Properties": {
        "RouteTableId": {
          "Ref": "SkeletonRouteTableId"
        },
        "SubnetId": {
          "Ref": "HelloWorldAsgLoadBalancerSubnetGroupSubnet"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    },
    "HelloWorldAsgLoadBalancerSubnetGroupSubnetRouteTableAssociation2": {
      "Properties": {
        "RouteTableId": {
          "Ref": "SkeletonRouteTableId"
        },
        "SubnetId": {
          "Ref": "HelloWorldAsgLoadBalancerSubnetGroupSubnet2"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    },
    "HelloWorldAsgLoadBalancerSubnetGroupSubnetRouteTableAssociation3": {
      "Properties": {
        "RouteTableId": {
          "Ref": "SkeletonRouteTableId"
        },
        "SubnetId": {
          "Ref": "HelloWorldAsgLoadBalancerSubnetGroupSubnet3"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    },
    "HelloWorldAsgScaleInAlarm": {
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "HelloWorldAsgScaleInPolicy"
          }
        ],
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "AutoScalingGroupName",
            "Value": {
              "Ref": "HelloWorldAsgAutoScalingGroup"
            }
          }
        ],
        "EvaluationPeriods": 5,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/EC2",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 25,
        "Unit": "Percent"
      },
      "Type": "AWS::CloudWatch::Alarm"
    },
    "HelloWorldAsgScaleInPolicy": {
      "Properties": {
        "AdjustmentType": "ChangeInCapacity",
        "AutoScalingGroupName": {
          "Ref": "HelloWorldAsgAutoScalingGroup"
        },
        "Cooldown": 300,
        "ScalingAdjustment": -1
      },
      "Type": "AWS::AutoScaling::ScalingPolicy"
    },
    "HelloWorldAsgScaleOutAlarm": {
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "HelloWorldAsgScaleOutPolicy"
          }
        ],
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": [
          {
            "Name": "AutoScalingGroupName",
            "Value": {
              "Ref": "HelloWorldAsgAutoScalingGroup"
            }
          }
        ],
        "EvaluationPeriods": 1,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/EC2",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 75,
        "Unit": "Percent"
      },
      "Type": "AWS::CloudWatch::Alarm"
    },
    "HelloWorldAsgScaleOutPolicy": {
      "Properties": {
        "AdjustmentType": "ChangeInCapacity",
        "AutoScalingGroupName": {
          "Ref": "HelloWorldAsgAutoScalingGroup"
        },
        "Cooldown": 300,
        "ScalingAdjustment": 1
      },
      "Type": "AWS::AutoScaling::ScalingPolicy"
    },
    "HelloWorldAsgSubnetGroupSubnet": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.0.0.0/26",
        "Tags": [
          {
            "Key": "Name",
            "Value": "HelloWorldAsgSubnetGroupSubnet"
          }
        ],
        "VpcId": {
          "Ref": "SkeletonVpcId"
        }
      },
      "Type": "AWS::EC2::Subnet"
    },
    "HelloWorldAsgSubnetGroupSubnet2": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.0.0.64/26",
        "Tags": [
          {
            "Key": "Name",
            "Value": "HelloWorldAsgSubnetGroupSubnet2"
          }
        ],
        "VpcId": {
          "Ref": "SkeletonVpcId"
        }
      },
      "Type": "AWS::EC2::Subnet"
    },
    "HelloWorldAsgSubnetGroupSubnet3": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            2,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.0.0.128/26",
        "Tags": [
          {
            "Key": "Name",
            "Value": "HelloWorldAsgSubnetGroupSubnet3"
          }
        ],
        "VpcId": {
          "Ref": "SkeletonVpcId"
        }
      },
      "Type": "AWS::EC2::Subnet"
    },
    "HelloWorldAsgSubnetGroupSubnetRouteTableAssociation": {
      "Properties": {
        "RouteTableId": {
          "Ref": "SkeletonRouteTableId"
        },
        "SubnetId": {
          "Ref": "HelloWorldAsgSubnetGroupSubnet"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    },
    "HelloWorldAsgSubnetGroupSubnetRouteTableAssociation2": {
      "Properties": {
        "RouteTableId": {
          "Ref": "SkeletonRouteTableId"
        },
        "SubnetId": {
          "Ref": "HelloWorldAsgSubnetGroupSubnet2"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    },
    "HelloWorldAsgSubnetGroupSubnetRouteTableAssociation3": {
      "Properties": {
        "RouteTableId": {
          "Ref": "SkeletonRouteTableId"
        },
        "SubnetId": {
          "Ref": "HelloWorldAsgSubnetGroupSubnet3"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    }
  }
}